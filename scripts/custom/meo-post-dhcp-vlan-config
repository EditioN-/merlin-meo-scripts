#!/bin/sh
#
# Special thanks to zipleen for the original Tomato/DD-WRT script that this 
# one is based on:
#
# https://github.com/zipleen/tomato-ddwrt-meo-iptv-scripts/blob/master/dhcpevent.sh
# 
# ----
#
# This script is run by the udhcpc program (via the wan-start script).
#
# The following variables are passed into it (w/example values):
#
# $interface: vlan12
# $vlan_ip: 10.x.x.x
# $subnet: 255.255.192.0
# $vlan_gateway: 10.y.y.y
#
# Its purpose is to set up the routes so that requests to VDF specific services
# from the private local network are routed to the VDF IPTV vlan.

vlan_iface=$interface
vlan_ip=$ip
vlan_subnet=$subnet
vlan_gateway=$router

# duped from _net_config
vlan_ip_file="/tmp/vlan_ip"

#-----------------------------------------------------------------------------
# These routes are set up on the original hardware, as observed in a backup 
# file (user.ini).
#-----------------------------------------------------------------------------
configure_vdf_routes () {
  logger "$0: setting up VLAN routes"
  
  # rule add chain=qos_user_labels index=1 dstip=IPTVnetVDF log=disabled state=enabled label=Video
  # add name=IPTVnetVDF type=ip addr=212.18.177.[96-127] mask=27
  ## 212.18.177.97 -> 212.18.177.126
  ## 212.18.177.96 / 255.255.255.224 / 27
  ## http://www.aboutmyip.com/AboutMyXApp/SubnetCalculator.jsp?ipAddress=10.173.0.0&cidr=16
  route add -net 212.18.177.96 netmask 255.255.255.224 gw $vlan_gateway dev $vlan_iface
  
  # rule add chain=qos_user_labels index=1 dstip=IPTVnetVDF log=disabled state=enabled label=Video
  # add name=IPTVnetVDF type=ip addr=95.136.[4-5].* mask=23
  ## 95.136.4.1 -> 95.136.5.254
  ## 95.136.4.0 / 255.255.254.0 / 23
  route add -net 95.136.4.0 netmask 255.255.254.0 gw $vlan_gateway dev $vlan_iface 
  
  # rule add chain=qos_user_labels index=1 dstip=IPTVnetVDF log=disabled state=enabled label=Video
  # add name=IPTVnetVDF type=ip addr=95.136.4.[112-119] mask=29
  ## 95.136.4.113 -> 95.136.4.118
  ## 95.136.4.112 / 255.255.255.248 / 29
  route add -net 95.136.4.112 netmask 255.255.255.248 gw $vlan_gateway dev $vlan_iface
  
  # rule add chain=qos_user_labels index=1 dstip=IPTVnetVDF log=disabled state=enabled label=Video
  # add name=IPTVnetVDF type=ip addr=87.103.119.196 mask=32
  ## 87.103.119.196/32 / 255.255.255.255
  route add -net 87.103.119.196 netmask 255.255.255.255 gw $vlan_gateway dev $vlan_iface
  
  # rule add chain=qos_user_labels index=1 dstip=IPTVnetVDF log=disabled state=enabled label=Video
  # add name=IPTVnetVDF type=ip addr=213.30.36.212 mask=32
  ## 213.30.36.212 / 255.255.255.255
  route add -net 213.30.36.212 netmask 255.255.255.255 gw $vlan_gateway dev $vlan_iface
  
  # rule add chain=qos_user_labels index=1 dstip=IPTVnetVDF log=disabled state=enabled label=Video
  # add name=IPTVnetVDF type=ip addr=10.20.100.[0-31] mask=27
  ## 10.20.100.1 -> 10.20.100.30
  ## 10.20.100.0 / 255.255.255.224 / 27
  route add -net 10.20.100.0 netmask 255.255.255.224 gw $vlan_gateway dev $vlan_iface
  
  # rule add chain=qos_user_labels index=1 dstip=IPTVnetVDF log=disabled state=enabled label=Video
  # add name=IPTVnetVDF type=ip addr=87.103.[116-119].* mask=22
  ## 87.103.116.1 -> 87.103.119.254
  ## 87.103.116.0 / 255.255.252.0 / 22
  route add -net 95.136.4.112 netmask 255.255.252.0 gw $vlan_gateway dev $vlan_iface
  
  # rule add chain=qos_user_labels index=1 dstip=IPTVnetVDF log=disabled state=enabled label=Video
  # add name=IPTVnetVDF type=ip addr=93.108.253.[128-255] mask=25
  ## 93.108.253.129 -> 93.108.253.254
  ## 93.108.253.128 / 255.255.255.128 / 25
  route add -net 93.108.253.128 netmask 255.255.255.128 gw $vlan_gateway dev $vlan_iface
  
  # rule add chain=qos_user_labels index=1 dstip=IPTVnetVDF log=disabled state=enabled label=Video
  # add name=IPTVnetVDF type=ip addr=10.20.110.[0-31] mask=27
  ## 10.20.110.1 -> 10.20.110.30
  ## 10.20.110.0 / 255.255.255.224 / 27
  route add -net 10.20.110.0 netmask 255.255.255.224 gw $vlan_gateway dev $vlan_iface
  
  # rule add chain=qos_user_labels index=1 dstip=IPTVnetVDF log=disabled state=enabled label=Video
  # add name=IPTVnetVDF type=ip addr=10.20.120.[0-31] mask=27
  ## 10.20.120.1 -> 10.20.120.30
  ## 10.20.120.0 / 255.255.255.224 / 27
  route add -net 10.20.120.0 netmask 255.255.255.224 gw $vlan_gateway dev $vlan_iface
  
  # rule add chain=qos_user_labels index=1 dstip=IPTVnetVDF log=disabled state=enabled label=Video
  # add name=IPTVnetVDF type=ip addr=10.20.150.[0-31] mask=27
  ## 10.20.150.1 -> 10.20.150.30
  ## 10.20.150.0 / 255.255.255.224 / 27
  route add -net 10.20.150.0 netmask 255.255.255.224 gw $vlan_gateway dev $vlan_iface
  
  # rule add chain=qos_user_labels index=1 dstip=IPTVnetVDF log=disabled state=enabled label=Video
  # add name=IPTVnetVDF type=ip addr=213.30.43.16 mask=32
  ## 213.30.43.16 / 255.255.255.255
  route add -net 213.30.43.16 netmask 255.255.255.255 gw $vlan_gateway dev $vlan_iface
  
  # rule add chain=qos_user_labels index=1 dstip=IPTVnetVDF log=disabled state=enabled label=Video
  # add name=IPTVnetVDF type=ip addr=213.30.36.[208-215] mask=29
  ## 213.30.36.209 -> 213.30.36.215
  ## 213.30.36.208 / 255.255.255.248 / 29
  route add -net 213.30.36.208 netmask 255.255.255.248 gw $vlan_gateway dev $vlan_iface
  
  # rule add chain=qos_user_labels index=1 dstip=IPTVnetVDF log=disabled state=enabled label=Video
  # add name=IPTVnetVDF type=ip addr=10.163.114.0/24 mask=24
  ## 10.163.114.1 -> 10.163.114.254
  ## 10.163.114.0 / 255.255.255.0 / 24
  route add -net 10.163.114.0 netmask 255.255.255.0 gw $vlan_gateway dev $vlan_iface
  
                     
  logger "$0: saving vlan ip $vlan_ip to $vlan_ip_file"
  
  # Now that we have the routes set up, we need to set up some firweall rules:
  echo $vlan_ip > $vlan_ip_file
}

#-----------------------------------------------------------------------------
deconfig() {
  ifconfig $vlan_iface 0.0.0.0
}
 
#-----------------------------------------------------------------------------
bound() {

  # debug environment variables
  #env > /tmp/env
    
  logger "$0: bound event variables: ip: $vlan_ip, iface: $vlan_iface, router: $vlan_gateway"

  # define interface IP
  ifconfig $vlan_iface $vlan_ip netmask $vlan_subnet
  
  # rp_filter must be off on vlan12!!!
  echo 0 > /proc/sys/net/ipv4/conf/$vlan_iface/rp_filter
        
  configure_vdf_routes
 
  logger "$0: completed"
}

#-----------------------------------------------------------------------------
renew() {
  # I'm lazy so I'm just goin to run all the commands again! Seems to work :P 
  bound
}
    
case $1 in
  deconfig)
    deconfig
  ;;
  bound)
    bound
  ;;
  renew)
    renew
  ;;
  update)
    renew
  ;;
esac
